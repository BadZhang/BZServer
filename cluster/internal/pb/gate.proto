syntax = "proto3";

option go_package = "./pb";

package pb;

service Gate {
  // 绑定用户与连接
  rpc Bind(BindRequest) returns (BindReply) {}
  // 解绑用户与连接
  rpc Unbind(UnbindRequest) returns (UnbindReply) {}
  // 获取客户端IP
  rpc GetIP(GetIPRequest) returns (GetIPReply) {}
  // 推送消息
  rpc Push(PushRequest) returns (PushReply) {}
  // 推送组播消息
  rpc Multicast(MulticastRequest) returns (MulticastReply) {}
  // 推送广播消息
  rpc Broadcast(BroadcastRequest) returns (BroadcastReply) {}
}

message BindRequest {
  int64 CID = 1; // 连接ID
  int64 UID = 2; // 用户ID
}

message BindReply {
}

message UnbindRequest {
  int64 UID = 1; // 用户ID
}

message UnbindReply {
}

message GetIPRequest {
  string NID = 1; // 节点ID
  int32 Kind = 2; // 推送类型 1：CID 2：UID
  int64 Target = 3; // 推送目标
}

message GetIPReply {
  string IP = 1; // IP地址
}

message PushRequest {
  string NID = 1; // 节点ID
  int32 Kind = 2; // 推送类型 1：CID 2：UID
  int64 Target = 3; // 推送目标
  int32 Route = 4;  // 路由
  bytes Buffer = 5; // 消息内容
}

message PushReply {}

message MulticastRequest {
  string NID = 1; // 节点ID
  int32 Kind = 2; // 推送类型 1：CID 2：UID
  repeated int64 Targets = 3; // 推送目标
  int32 Route = 4;  // 路由
  bytes Buffer = 5; // 消息内容
}

message MulticastReply {
  int64 Total = 1; // 组播数量
}

message BroadcastRequest {
  string NID = 1; // 节点ID
  int32 Kind = 2; // 推送类型 1：CID 2：UID
  int32 Route = 3;  // 路由
  bytes Buffer = 4; // 消息内容
}

message BroadcastReply {
  int64 Total = 1; // 广播数量
}